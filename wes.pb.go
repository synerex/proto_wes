// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: wes.proto

package proto_wes

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//from wes-provider
type WesMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic    string    `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	WmsID    int64     `protobuf:"varint,2,opt,name=wmsID,proto3" json:"wmsID,omitempty"`
	HumanID  int64     `protobuf:"varint,3,opt,name=humanID,proto3" json:"humanID,omitempty"`
	AmrID    int64     `protobuf:"varint,4,opt,name=amrID,proto3" json:"amrID,omitempty"`
	WmsStart int64     `protobuf:"varint,5,opt,name=wmsStart,proto3" json:"wmsStart,omitempty"` //unixtime
	Pos      *Position `protobuf:"bytes,6,opt,name=pos,proto3" json:"pos,omitempty"`            //待っている場所
}

func (x *WesMessage) Reset() {
	*x = WesMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WesMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WesMessage) ProtoMessage() {}

func (x *WesMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WesMessage.ProtoReflect.Descriptor instead.
func (*WesMessage) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{0}
}

func (x *WesMessage) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *WesMessage) GetWmsID() int64 {
	if x != nil {
		return x.WmsID
	}
	return 0
}

func (x *WesMessage) GetHumanID() int64 {
	if x != nil {
		return x.HumanID
	}
	return 0
}

func (x *WesMessage) GetAmrID() int64 {
	if x != nil {
		return x.AmrID
	}
	return 0
}

func (x *WesMessage) GetWmsStart() int64 {
	if x != nil {
		return x.WmsStart
	}
	return 0
}

func (x *WesMessage) GetPos() *Position {
	if x != nil {
		return x.Pos
	}
	return nil
}

//二次元座標
type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{1}
}

func (x *Position) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

//wmsの一つの商品
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemID   int64  `protobuf:"varint,1,opt,name=itemID,proto3" json:"itemID,omitempty"`
	ShelfID  string `protobuf:"bytes,2,opt,name=shelfID,proto3" json:"shelfID,omitempty"`
	Datetime int64  `protobuf:"varint,3,opt,name=datetime,proto3" json:"datetime,omitempty"` //unix
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{2}
}

func (x *Item) GetItemID() int64 {
	if x != nil {
		return x.ItemID
	}
	return 0
}

func (x *Item) GetShelfID() string {
	if x != nil {
		return x.ShelfID
	}
	return ""
}

func (x *Item) GetDatetime() int64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

type WmsOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WmsID   int64   `protobuf:"varint,1,opt,name=wmsID,proto3" json:"wmsID,omitempty"`
	HumanID int64   `protobuf:"varint,2,opt,name=humanID,proto3" json:"humanID,omitempty"`
	Item    []*Item `protobuf:"bytes,3,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *WmsOrder) Reset() {
	*x = WmsOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WmsOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WmsOrder) ProtoMessage() {}

func (x *WmsOrder) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WmsOrder.ProtoReflect.Descriptor instead.
func (*WmsOrder) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{3}
}

func (x *WmsOrder) GetWmsID() int64 {
	if x != nil {
		return x.WmsID
	}
	return 0
}

func (x *WmsOrder) GetHumanID() int64 {
	if x != nil {
		return x.HumanID
	}
	return 0
}

func (x *WmsOrder) GetItem() []*Item {
	if x != nil {
		return x.Item
	}
	return nil
}

//simlation type
type SimType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimType string `protobuf:"bytes,1,opt,name=simType,proto3" json:"simType,omitempty"` //synchronous or asynchronous or onlyHuman
}

func (x *SimType) Reset() {
	*x = SimType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimType) ProtoMessage() {}

func (x *SimType) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimType.ProtoReflect.Descriptor instead.
func (*SimType) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{4}
}

func (x *SimType) GetSimType() string {
	if x != nil {
		return x.SimType
	}
	return ""
}

//from hsim
type HsimMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic    string    `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	WmsID    int64     `protobuf:"varint,2,opt,name=wmsID,proto3" json:"wmsID,omitempty"`
	HumanID  int64     `protobuf:"varint,3,opt,name=humanID,proto3" json:"humanID,omitempty"`
	AmrID    int64     `protobuf:"varint,4,opt,name=amrID,proto3" json:"amrID,omitempty"`
	WmsStart int64     `protobuf:"varint,5,opt,name=wmsStart,proto3" json:"wmsStart,omitempty"` //unix
	PutPos   *Position `protobuf:"bytes,6,opt,name=putPos,proto3" json:"putPos,omitempty"`      //position of cart
	PutTime  int64     `protobuf:"varint,7,opt,name=putTime,proto3" json:"putTime,omitempty"`   //unixtime at cart put
}

func (x *HsimMessage) Reset() {
	*x = HsimMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HsimMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HsimMessage) ProtoMessage() {}

func (x *HsimMessage) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HsimMessage.ProtoReflect.Descriptor instead.
func (*HsimMessage) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{5}
}

func (x *HsimMessage) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *HsimMessage) GetWmsID() int64 {
	if x != nil {
		return x.WmsID
	}
	return 0
}

func (x *HsimMessage) GetHumanID() int64 {
	if x != nil {
		return x.HumanID
	}
	return 0
}

func (x *HsimMessage) GetAmrID() int64 {
	if x != nil {
		return x.AmrID
	}
	return 0
}

func (x *HsimMessage) GetWmsStart() int64 {
	if x != nil {
		return x.WmsStart
	}
	return 0
}

func (x *HsimMessage) GetPutPos() *Position {
	if x != nil {
		return x.PutPos
	}
	return nil
}

func (x *HsimMessage) GetPutTime() int64 {
	if x != nil {
		return x.PutTime
	}
	return 0
}

//from hsim
type HumanState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                   //human id
	WmsBatNum   int64     `protobuf:"varint,2,opt,name=wmsBatNum,proto3" json:"wmsBatNum,omitempty"`     //current wms batID
	StartTime   int64     `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`     //unix
	CurrentTime int64     `protobuf:"varint,4,opt,name=currentTime,proto3" json:"currentTime,omitempty"` //unix
	ElapsedTime int64     `protobuf:"varint,5,opt,name=elapsedTime,proto3" json:"elapsedTime,omitempty"` //[sec]
	State       string    `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`              //status
	RestWms     []int64   `protobuf:"varint,7,rep,packed,name=restWms,proto3" json:"restWms,omitempty"`
	TargetPos   *Position `protobuf:"bytes,8,opt,name=targetPos,proto3" json:"targetPos,omitempty"`
	PickedNum   int64     `protobuf:"varint,9,opt,name=pickedNum,proto3" json:"pickedNum,omitempty"`    //ピッキングされた商品の数
	WmsItemNum  int64     `protobuf:"varint,10,opt,name=wmsItemNum,proto3" json:"wmsItemNum,omitempty"` //1batの商品の数
	Pos         *Position `protobuf:"bytes,11,opt,name=pos,proto3" json:"pos,omitempty"`                //current pos
	RestItem    []string  `protobuf:"bytes,12,rep,name=restItem,proto3" json:"restItem,omitempty"`      //回収されていない商品の棚ID一覧
	PickedItem  []string  `protobuf:"bytes,13,rep,name=pickedItem,proto3" json:"pickedItem,omitempty"`  //回収された商品の棚ID一覧
}

func (x *HumanState) Reset() {
	*x = HumanState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HumanState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HumanState) ProtoMessage() {}

func (x *HumanState) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HumanState.ProtoReflect.Descriptor instead.
func (*HumanState) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{6}
}

func (x *HumanState) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HumanState) GetWmsBatNum() int64 {
	if x != nil {
		return x.WmsBatNum
	}
	return 0
}

func (x *HumanState) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *HumanState) GetCurrentTime() int64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

func (x *HumanState) GetElapsedTime() int64 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

func (x *HumanState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *HumanState) GetRestWms() []int64 {
	if x != nil {
		return x.RestWms
	}
	return nil
}

func (x *HumanState) GetTargetPos() *Position {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

func (x *HumanState) GetPickedNum() int64 {
	if x != nil {
		return x.PickedNum
	}
	return 0
}

func (x *HumanState) GetWmsItemNum() int64 {
	if x != nil {
		return x.WmsItemNum
	}
	return 0
}

func (x *HumanState) GetPos() *Position {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *HumanState) GetRestItem() []string {
	if x != nil {
		return x.RestItem
	}
	return nil
}

func (x *HumanState) GetPickedItem() []string {
	if x != nil {
		return x.PickedItem
	}
	return nil
}

//from wes
type AmrState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                   //amrID
	WmsBatNum   int64     `protobuf:"varint,2,opt,name=wmsBatNum,proto3" json:"wmsBatNum,omitempty"`     //current wms batID
	StartTime   int64     `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`     //unix
	CurrentTime int64     `protobuf:"varint,4,opt,name=currentTime,proto3" json:"currentTime,omitempty"` //unix
	ElapsedTime int64     `protobuf:"varint,5,opt,name=elapsedTime,proto3" json:"elapsedTime,omitempty"` //[sec]
	State       string    `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`              //status
	TargetPos   *Position `protobuf:"bytes,7,opt,name=targetPos,proto3" json:"targetPos,omitempty"`
	Pos         *Position `protobuf:"bytes,8,opt,name=pos,proto3" json:"pos,omitempty"`       //current pos
	Target      string    `protobuf:"bytes,9,opt,name=target,proto3" json:"target,omitempty"` //target pos name
}

func (x *AmrState) Reset() {
	*x = AmrState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmrState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmrState) ProtoMessage() {}

func (x *AmrState) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmrState.ProtoReflect.Descriptor instead.
func (*AmrState) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{7}
}

func (x *AmrState) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AmrState) GetWmsBatNum() int64 {
	if x != nil {
		return x.WmsBatNum
	}
	return 0
}

func (x *AmrState) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AmrState) GetCurrentTime() int64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

func (x *AmrState) GetElapsedTime() int64 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

func (x *AmrState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *AmrState) GetTargetPos() *Position {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

func (x *AmrState) GetPos() *Position {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *AmrState) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

//from wes
type WesState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimType     string  `protobuf:"bytes,1,opt,name=simType,proto3" json:"simType,omitempty"`               //simlation type
	WorkingWms  []int64 `protobuf:"varint,2,rep,packed,name=workingWms,proto3" json:"workingWms,omitempty"` //wmsID list worked by humans
	RestWms     []int64 `protobuf:"varint,3,rep,packed,name=restWms,proto3" json:"restWms,omitempty"`       //wmsID list not worked
	FinishWms   []int64 `protobuf:"varint,4,rep,packed,name=finishWms,proto3" json:"finishWms,omitempty"`   //wmsID list shiped
	WmsGetTime  int64   `protobuf:"varint,5,opt,name=wmsGetTime,proto3" json:"wmsGetTime,omitempty"`        //unix
	CurrentTime int64   `protobuf:"varint,6,opt,name=currentTime,proto3" json:"currentTime,omitempty"`      //unix
	ElapsedTime int64   `protobuf:"varint,7,opt,name=elapsedTime,proto3" json:"elapsedTime,omitempty"`      //[sec]
	Speed       float32 `protobuf:"fixed32,8,opt,name=speed,proto3" json:"speed,omitempty"`                 //simlation speed
}

func (x *WesState) Reset() {
	*x = WesState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WesState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WesState) ProtoMessage() {}

func (x *WesState) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WesState.ProtoReflect.Descriptor instead.
func (*WesState) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{8}
}

func (x *WesState) GetSimType() string {
	if x != nil {
		return x.SimType
	}
	return ""
}

func (x *WesState) GetWorkingWms() []int64 {
	if x != nil {
		return x.WorkingWms
	}
	return nil
}

func (x *WesState) GetRestWms() []int64 {
	if x != nil {
		return x.RestWms
	}
	return nil
}

func (x *WesState) GetFinishWms() []int64 {
	if x != nil {
		return x.FinishWms
	}
	return nil
}

func (x *WesState) GetWmsGetTime() int64 {
	if x != nil {
		return x.WmsGetTime
	}
	return 0
}

func (x *WesState) GetCurrentTime() int64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

func (x *WesState) GetElapsedTime() int64 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

func (x *WesState) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

// one cart's state
type WesCartState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pos           *Position `protobuf:"bytes,2,opt,name=pos,proto3" json:"pos,omitempty"`                      //put position
	LatestMsgTime int64     `protobuf:"varint,3,opt,name=latestMsgTime,proto3" json:"latestMsgTime,omitempty"` //latest receive msg time
	HumanID       int64     `protobuf:"varint,4,opt,name=humanID,proto3" json:"humanID,omitempty"`             //using humanID
	ElapsedTime   int64     `protobuf:"varint,5,opt,name=elapsedTime,proto3" json:"elapsedTime,omitempty"`     //[sec]
	CurrentTime   int64     `protobuf:"varint,6,opt,name=currentTime,proto3" json:"currentTime,omitempty"`     //unix
	Status        string    `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`                //state
	AmrID         int64     `protobuf:"varint,8,opt,name=amrID,proto3" json:"amrID,omitempty"`                 //assigned amrID
}

func (x *WesCartState) Reset() {
	*x = WesCartState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WesCartState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WesCartState) ProtoMessage() {}

func (x *WesCartState) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WesCartState.ProtoReflect.Descriptor instead.
func (*WesCartState) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{9}
}

func (x *WesCartState) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WesCartState) GetPos() *Position {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *WesCartState) GetLatestMsgTime() int64 {
	if x != nil {
		return x.LatestMsgTime
	}
	return 0
}

func (x *WesCartState) GetHumanID() int64 {
	if x != nil {
		return x.HumanID
	}
	return 0
}

func (x *WesCartState) GetElapsedTime() int64 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

func (x *WesCartState) GetCurrentTime() int64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

func (x *WesCartState) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WesCartState) GetAmrID() int64 {
	if x != nil {
		return x.AmrID
	}
	return 0
}

// hsim status, from hsim
type HsimState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimType     string  `protobuf:"bytes,1,opt,name=simType,proto3" json:"simType,omitempty"` //simlation type
	WorkingWms  []int64 `protobuf:"varint,2,rep,packed,name=workingWms,proto3" json:"workingWms,omitempty"`
	FinishWms   []int64 `protobuf:"varint,3,rep,packed,name=finishWms,proto3" json:"finishWms,omitempty"`
	WmsGetTime  int64   `protobuf:"varint,4,opt,name=wmsGetTime,proto3" json:"wmsGetTime,omitempty"`
	CurrentTime int64   `protobuf:"varint,5,opt,name=currentTime,proto3" json:"currentTime,omitempty"`
	ElapsedTime int64   `protobuf:"varint,6,opt,name=elapsedTime,proto3" json:"elapsedTime,omitempty"` //[sec]
	IdList      []int64 `protobuf:"varint,7,rep,packed,name=idList,proto3" json:"idList,omitempty"`    //human id list
}

func (x *HsimState) Reset() {
	*x = HsimState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HsimState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HsimState) ProtoMessage() {}

func (x *HsimState) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HsimState.ProtoReflect.Descriptor instead.
func (*HsimState) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{10}
}

func (x *HsimState) GetSimType() string {
	if x != nil {
		return x.SimType
	}
	return ""
}

func (x *HsimState) GetWorkingWms() []int64 {
	if x != nil {
		return x.WorkingWms
	}
	return nil
}

func (x *HsimState) GetFinishWms() []int64 {
	if x != nil {
		return x.FinishWms
	}
	return nil
}

func (x *HsimState) GetWmsGetTime() int64 {
	if x != nil {
		return x.WmsGetTime
	}
	return 0
}

func (x *HsimState) GetCurrentTime() int64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

func (x *HsimState) GetElapsedTime() int64 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

func (x *HsimState) GetIdList() []int64 {
	if x != nil {
		return x.IdList
	}
	return nil
}

// wesHumanState from wes , wes's monitering human state
type WesHumanState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PickedItem       []string  `protobuf:"bytes,2,rep,name=pickedItem,proto3" json:"pickedItem,omitempty"`              //picked item's shelfID list
	NoPickedItem     []string  `protobuf:"bytes,3,rep,name=noPickedItem,proto3" json:"noPickedItem,omitempty"`          // not picked item's shelfID list
	LatestMsgTime    int64     `protobuf:"varint,4,opt,name=latestMsgTime,proto3" json:"latestMsgTime,omitempty"`       //latest receive message's time (unix)
	LatestPos        *Position `protobuf:"bytes,5,opt,name=latestPos,proto3" json:"latestPos,omitempty"`                //latest receive message's position
	Progress         float32   `protobuf:"fixed32,6,opt,name=progress,proto3" json:"progress,omitempty"`                //wms_orderの進行度
	PickingItemIndex int64     `protobuf:"varint,7,opt,name=pickingItemIndex,proto3" json:"pickingItemIndex,omitempty"` //picking item's index of wms_order's itemList
	WorkingWms       int64     `protobuf:"varint,8,opt,name=workingWms,proto3" json:"workingWms,omitempty"`             //working wmsID (wes guess from message)
	WmsItemNum       int64     `protobuf:"varint,9,opt,name=wmsItemNum,proto3" json:"wmsItemNum,omitempty"`             //working wms's all item num
	CartId           int64     `protobuf:"varint,10,opt,name=cartId,proto3" json:"cartId,omitempty"`                    //having cart (estimate)
	RestWms          []int64   `protobuf:"varint,11,rep,packed,name=restWms,proto3" json:"restWms,omitempty"`           //rest wms ids(estimate)
	ElapsedTime      int64     `protobuf:"varint,12,opt,name=elapsedTime,proto3" json:"elapsedTime,omitempty"`          //elapsedTime
	LastItem         string    `protobuf:"bytes,13,opt,name=lastItem,proto3" json:"lastItem,omitempty"`                 //next picking item name
	NextItem         string    `protobuf:"bytes,14,opt,name=nextItem,proto3" json:"nextItem,omitempty"`                 //next picking item
}

func (x *WesHumanState) Reset() {
	*x = WesHumanState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WesHumanState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WesHumanState) ProtoMessage() {}

func (x *WesHumanState) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WesHumanState.ProtoReflect.Descriptor instead.
func (*WesHumanState) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{11}
}

func (x *WesHumanState) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WesHumanState) GetPickedItem() []string {
	if x != nil {
		return x.PickedItem
	}
	return nil
}

func (x *WesHumanState) GetNoPickedItem() []string {
	if x != nil {
		return x.NoPickedItem
	}
	return nil
}

func (x *WesHumanState) GetLatestMsgTime() int64 {
	if x != nil {
		return x.LatestMsgTime
	}
	return 0
}

func (x *WesHumanState) GetLatestPos() *Position {
	if x != nil {
		return x.LatestPos
	}
	return nil
}

func (x *WesHumanState) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *WesHumanState) GetPickingItemIndex() int64 {
	if x != nil {
		return x.PickingItemIndex
	}
	return 0
}

func (x *WesHumanState) GetWorkingWms() int64 {
	if x != nil {
		return x.WorkingWms
	}
	return 0
}

func (x *WesHumanState) GetWmsItemNum() int64 {
	if x != nil {
		return x.WmsItemNum
	}
	return 0
}

func (x *WesHumanState) GetCartId() int64 {
	if x != nil {
		return x.CartId
	}
	return 0
}

func (x *WesHumanState) GetRestWms() []int64 {
	if x != nil {
		return x.RestWms
	}
	return nil
}

func (x *WesHumanState) GetElapsedTime() int64 {
	if x != nil {
		return x.ElapsedTime
	}
	return 0
}

func (x *WesHumanState) GetLastItem() string {
	if x != nil {
		return x.LastItem
	}
	return ""
}

func (x *WesHumanState) GetNextItem() string {
	if x != nil {
		return x.NextItem
	}
	return ""
}

type HsimCartState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                         //ID
	State          string    `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`                    //state of cart
	Pos            *Position `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`                        //current position
	HumanID        int64     `protobuf:"varint,4,opt,name=humanID,proto3" json:"humanID,omitempty"`               //bring or put humanID
	Items          []string  `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`                    //items in cart
	LastUpdateUnix int64     `protobuf:"varint,6,opt,name=lastUpdateUnix,proto3" json:"lastUpdateUnix,omitempty"` //latest update time
	PutUnix        int64     `protobuf:"varint,7,opt,name=putUnix,proto3" json:"putUnix,omitempty"`               //human put time(unix)
}

func (x *HsimCartState) Reset() {
	*x = HsimCartState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HsimCartState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HsimCartState) ProtoMessage() {}

func (x *HsimCartState) ProtoReflect() protoreflect.Message {
	mi := &file_wes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HsimCartState.ProtoReflect.Descriptor instead.
func (*HsimCartState) Descriptor() ([]byte, []int) {
	return file_wes_proto_rawDescGZIP(), []int{12}
}

func (x *HsimCartState) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HsimCartState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *HsimCartState) GetPos() *Position {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *HsimCartState) GetHumanID() int64 {
	if x != nil {
		return x.HumanID
	}
	return 0
}

func (x *HsimCartState) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *HsimCartState) GetLastUpdateUnix() int64 {
	if x != nil {
		return x.LastUpdateUnix
	}
	return 0
}

func (x *HsimCartState) GetPutUnix() int64 {
	if x != nil {
		return x.PutUnix
	}
	return 0
}

var File_wes_proto protoreflect.FileDescriptor

var file_wes_proto_rawDesc = []byte{
	0x0a, 0x09, 0x77, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x77, 0x65, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x0a, 0x77, 0x65, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x6d, 0x73, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x6d, 0x73, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x6d, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x6d, 0x72, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6d, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x6d, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x25, 0x0a,
	0x03, 0x70, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x77, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x03, 0x70, 0x6f, 0x73, 0x22, 0x26, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0x54, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x68, 0x65, 0x6c, 0x66, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x68, 0x65, 0x6c, 0x66, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x08, 0x77, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x6d, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77,
	0x6d, 0x73, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x44, 0x12, 0x23,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0x23, 0x0a, 0x07, 0x73, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x0b, 0x68, 0x73, 0x69,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x6d, 0x73, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77,
	0x6d, 0x73, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6d, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61,
	0x6d, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6d, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x6d, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x2b, 0x0a, 0x06, 0x70, 0x75, 0x74, 0x50, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x75, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa0, 0x03, 0x0a, 0x0a, 0x68, 0x75, 0x6d, 0x61,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6d, 0x73, 0x42, 0x61, 0x74,
	0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x6d, 0x73, 0x42, 0x61,
	0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x74, 0x57, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x74, 0x57, 0x6d, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x50, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x77, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x69, 0x63,
	0x6b, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x69,
	0x63, 0x6b, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6d, 0x73, 0x49, 0x74,
	0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x6d, 0x73,
	0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x25, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x73,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x69,
	0x63, 0x6b, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xa2, 0x02, 0x0a, 0x08, 0x61,
	0x6d, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6d, 0x73, 0x42, 0x61,
	0x74, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x77, 0x6d, 0x73, 0x42,
	0x61, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6c, 0x61, 0x70,
	0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a,
	0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f, 0x73,
	0x12, 0x25, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22,
	0xf6, 0x01, 0x0a, 0x08, 0x77, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x57, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x57, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x74, 0x57, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x73, 0x74, 0x57, 0x6d, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x57, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x57, 0x6d, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x77, 0x6d, 0x73, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x77, 0x6d, 0x73, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0xf7, 0x01, 0x0a, 0x0c, 0x77, 0x65, 0x73,
	0x43, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x03, 0x70, 0x6f, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77,
	0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d,
	0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x6d, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x6d, 0x72,
	0x49, 0x44, 0x22, 0xdf, 0x01, 0x0a, 0x09, 0x68, 0x73, 0x69, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x57, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x57, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x57, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x57, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x6d, 0x73, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x6d,
	0x73, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c,
	0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x69, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xd0, 0x03, 0x0a, 0x0d, 0x77, 0x65, 0x73, 0x48, 0x75, 0x6d, 0x61,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x6b,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x50, 0x69, 0x63, 0x6b,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f,
	0x50, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x31, 0x0a, 0x09, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x73, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2a, 0x0a, 0x10, 0x70, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x70, 0x69, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x57, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x57, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x77,
	0x6d, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x77, 0x6d, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x61, 0x72,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x74, 0x57, 0x6d, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x73, 0x74, 0x57, 0x6d, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x65, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x65, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xce, 0x01, 0x0a, 0x0d, 0x68, 0x73, 0x69, 0x6d,
	0x43, 0x61, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x25, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x77, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x75, 0x74, 0x55, 0x6e, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x75, 0x74, 0x55, 0x6e, 0x69, 0x78, 0x42, 0x1e, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x6e, 0x65, 0x72, 0x65, 0x78, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wes_proto_rawDescOnce sync.Once
	file_wes_proto_rawDescData = file_wes_proto_rawDesc
)

func file_wes_proto_rawDescGZIP() []byte {
	file_wes_proto_rawDescOnce.Do(func() {
		file_wes_proto_rawDescData = protoimpl.X.CompressGZIP(file_wes_proto_rawDescData)
	})
	return file_wes_proto_rawDescData
}

var file_wes_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_wes_proto_goTypes = []interface{}{
	(*WesMessage)(nil),    // 0: proto.wes.wesMessage
	(*Position)(nil),      // 1: proto.wes.Position
	(*Item)(nil),          // 2: proto.wes.Item
	(*WmsOrder)(nil),      // 3: proto.wes.wmsOrder
	(*SimType)(nil),       // 4: proto.wes.simType
	(*HsimMessage)(nil),   // 5: proto.wes.hsimMessage
	(*HumanState)(nil),    // 6: proto.wes.humanState
	(*AmrState)(nil),      // 7: proto.wes.amrState
	(*WesState)(nil),      // 8: proto.wes.wesState
	(*WesCartState)(nil),  // 9: proto.wes.wesCartState
	(*HsimState)(nil),     // 10: proto.wes.hsimState
	(*WesHumanState)(nil), // 11: proto.wes.wesHumanState
	(*HsimCartState)(nil), // 12: proto.wes.hsimCartState
}
var file_wes_proto_depIdxs = []int32{
	1,  // 0: proto.wes.wesMessage.pos:type_name -> proto.wes.Position
	2,  // 1: proto.wes.wmsOrder.item:type_name -> proto.wes.Item
	1,  // 2: proto.wes.hsimMessage.putPos:type_name -> proto.wes.Position
	1,  // 3: proto.wes.humanState.targetPos:type_name -> proto.wes.Position
	1,  // 4: proto.wes.humanState.pos:type_name -> proto.wes.Position
	1,  // 5: proto.wes.amrState.targetPos:type_name -> proto.wes.Position
	1,  // 6: proto.wes.amrState.pos:type_name -> proto.wes.Position
	1,  // 7: proto.wes.wesCartState.pos:type_name -> proto.wes.Position
	1,  // 8: proto.wes.wesHumanState.latestPos:type_name -> proto.wes.Position
	1,  // 9: proto.wes.hsimCartState.pos:type_name -> proto.wes.Position
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_wes_proto_init() }
func file_wes_proto_init() {
	if File_wes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WesMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WmsOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HsimMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HumanState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmrState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WesState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WesCartState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HsimState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WesHumanState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HsimCartState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wes_proto_goTypes,
		DependencyIndexes: file_wes_proto_depIdxs,
		MessageInfos:      file_wes_proto_msgTypes,
	}.Build()
	File_wes_proto = out.File
	file_wes_proto_rawDesc = nil
	file_wes_proto_goTypes = nil
	file_wes_proto_depIdxs = nil
}
